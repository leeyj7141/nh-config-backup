prometheus:
  prometheusSpec:
    externalLabels:
      cluster: ""
      NHcluster: "clusterA"
    replicas: 2
#    remoteWrite: 
#     - url: http://metricbeat.logging.svc.cluster.local.:9201/write
    thanos:
      objectStorageConfig:
        #key: minio_conf.yml
        key: objstore.yml
        name: thanos-obstore-secret
#  thanosService:
#    annotations: {}
#    clusterIP: ""
#    enabled: true
#    labels: {}
#    port: 10901
#    portName: grpc
#    targetPort: grpc
#    type: ClusterIP
  thanosService:
    enabled: true 
    annotations: {}
    labels: {}
    externalTrafficPolicy: Cluster
    type: ClusterIP
    portName: grpc
    port: 10901
    targetPort: "grpc"
    httpPortName: http
    httpPort: 10902
    targetHttpPort: "http"
    clusterIP: ""
    nodePort: 30901
    httpNodePort: 30902

alertmanager:
  enabled: true
  alertmanagerSpec:
    logLevel: debug
    alertmanagerConfiguration: 
      name: example-alertcfg
    clusterGossipInterval: "15s"
    replicas: 1
    #replicas: 3
    alertmanagerConfigSelector:
      matchExpressions:
        - key: alertconfig
          operator: In
          values:
            - example
            - example-config
  service:
    type: NodePort
    nodePort: 31112

grafana: 
  replicas: 1
  image: 
    repository: rancher/mirrored-grafana-grafana
    tag: 10.3.3
  service:
    type: NodePort
    nodePort: 31111
    isessionAffinity: ClientIP
  sidecar:
    datasources:
      isDefaultDatasource: false
    dashboards:
      enabled: true
  dashboardProviders: 
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: 'Test-dashboard'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default: 
      k8s-status-test1:
        file: dashboards/k8s-status-1.json
      k8s-status-test2:
        file: k8s-status-2.json
      k8s-status-test3:
        file: /home/rocky/yjlee/apps/rancher-prometheus/dashboards/k8s-status-3.json
      kubernetes-cluster:
        # Ref: https://grafana.com/dashboards/6417 - Kubernetes cluster 
        gnetId: 6417
        revision: 1
        datasource: Thanos

  additionalDataSources:
    - name: Thanos
      type: prometheus
      access: proxy
      url: http://thanos-query.thanos.svc.cluster.local.:9090
      isDefault: true
      jsonData:
        cacheLevel: Medium
        defaultEditor: builder
        disableRecordingRules: false
        exemplarTraceIdDestinations: []
        httpMethod: POST
        prometheusType: Thanos
        prometheusVersion: 0.31.1
        timeInterval: 1m
    - name: elasticsearch-k8s-log
      type: elasticsearch
      access: proxy
      url: http://172.31.18.85:9200
      isDefault: false
      jsonData:
        includeFrozen: false
        index: k8s-log*
        logLevelField: ""
        logMessageField: message
        maxConcurrentShardRequests: 5
        timeField: "@timestamp"
        timeInterval: 30s
    - name: elasticsearch-k8s-app
      type: elasticsearch
      access: proxy
      url: http://172.31.18.85:9200
      isDefault: false
      jsonData:
        includeFrozen: false
        index: k8s-app3-metric*
        logLevelField: ""
        logMessageField: message
        maxConcurrentShardRequests: 5
        timeField: "@timestamp"
        timeInterval: 30s

kube-state-metrics:
  replicas: 2

prometheus-adapter:
  replicas: 2
