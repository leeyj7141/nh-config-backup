apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: nfs-provisioner
    meta.helm.sh/release-namespace: nfs
  creationTimestamp: "2024-07-30T06:02:50Z"
  generation: 1
  labels:
    app: nfs-server-provisioner
    app.kubernetes.io/managed-by: Helm
    chart: nfs-server-provisioner-1.8.0
    heritage: Helm
    release: nfs-provisioner
  name: nfs-provisioner-nfs-server-provisioner
  namespace: nfs
  resourceVersion: "379577"
  uid: cd4b755f-5c8e-4f50-98d2-3137058e57e0
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nfs-server-provisioner
      release: nfs-provisioner
  serviceName: nfs-provisioner-nfs-server-provisioner
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nfs-server-provisioner
        chart: nfs-server-provisioner-1.8.0
        heritage: Helm
        release: nfs-provisioner
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - nh-management-worker-1
      containers:
      - args:
        - -provisioner=cluster.local/nfs-provisioner-nfs-server-provisioner
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVICE_NAME
          value: nfs-provisioner-nfs-server-provisioner
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: registry.k8s.io/sig-storage/nfs-provisioner:v4.0.8
        imagePullPolicy: IfNotPresent
        name: nfs-server-provisioner
        ports:
        - containerPort: 2049
          name: nfs
          protocol: TCP
        - containerPort: 2049
          name: nfs-udp
          protocol: UDP
        - containerPort: 32803
          name: nlockmgr
          protocol: TCP
        - containerPort: 32803
          name: nlockmgr-udp
          protocol: UDP
        - containerPort: 20048
          name: mountd
          protocol: TCP
        - containerPort: 20048
          name: mountd-udp
          protocol: UDP
        - containerPort: 875
          name: rquotad
          protocol: TCP
        - containerPort: 875
          name: rquotad-udp
          protocol: UDP
        - containerPort: 111
          name: rpcbind
          protocol: TCP
        - containerPort: 111
          name: rpcbind-udp
          protocol: UDP
        - containerPort: 662
          name: statd
          protocol: TCP
        - containerPort: 662
          name: statd-udp
          protocol: UDP
        resources: {}
        securityContext:
          capabilities:
            add:
            - DAC_READ_SEARCH
            - SYS_RESOURCE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /export
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nfs-provisioner-nfs-server-provisioner
      serviceAccountName: nfs-provisioner-nfs-server-provisioner
      terminationGracePeriodSeconds: 100
      volumes:
      - emptyDir: {}
        name: data
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate


